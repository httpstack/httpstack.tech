{
    "/mnt/data/Router.php": "<?php namespace HttpStack\\Routing; class Router {    private $after = [];    private $before = [];    public function after(Route $route){        $newRouteUri = $route->getUri();        $newRouteMethod = $route->getMethod();        $newRouteHandlers = $route->getHandlers();        //CHECK TO SEE IF THE ROUTE METHOD AND URI ARE REGISTERED        if(isset($this->after[$newRouteMethod]) && isset($this->after[$newRouteMethod][$newRouteUri])){            $oldRouteHandlers = $this->after[$newRouteMethod][$newRouteUri];            foreach($newRouteHandlers as $newHandler){                array_push($oldRouteHandlers, $newHandler);            }        }else{            $this->after[$newRouteMethod][$newRouteUri] = $newRouteHandlers;        }    }    public function before(Route $route){        $newRouteUri = $route->getUri();        $newRouteMethod = $route->getMethod();        $newRouteHandlers = $route->getHandlers();        //CHECK TO SEE IF THE ROUTE METHOD AND URI ARE REGISTERED        if(isset($this->before[$newRouteMethod]) && isset($this->before[$newRouteMethod][$newRouteUri])){",